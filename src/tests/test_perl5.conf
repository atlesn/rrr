[instance_test_module]
module=test_module
test_method=test_array
senders=instance_buffer_output
# Make sure the perl5 source function runs at least once
test_exit_delay_ms=1000

[instance_buffer_output]
module=buffer
senders=instance_perl5

[instance_socket]
module=socket
route=T socket/topic/a/b/c	D instance_exploder APPLY POP
socket_default_topic=socket/topic/a/b/c
socket_path=/tmp/rrr-test.sock
socket_receive_rrr_message=yes
socket_unlink_if_exists=yes

<EXPLODER_ROUTE>
# Match all topics
T #
D instance_perl5 APPLY
D instance_raw APPLY
POP

[instance_exploder]
module=exploder
senders=instance_socket
duplicate=yes
route=<EXPLODER_ROUTE>
exploder_preserve_topic=yes
exploder_original_passthrough=yes
exploder_topic=/xxx/
exploder_topic_append_tag=yes

(PERL5_METHODS)
# Match all topics
T #
D my_method APPLY
POP

# We first receive single messages from exploder and store all their tags
# in an array. When the passthrough full message arrives, we check that all
# tags in this messsage was previously received as single position array messages.
[instance_perl5]
module=perl5
senders=instance_exploder
methods=(PERL5_METHODS)
duplicate=yes
perl5_file=test.pl
perl5_config_sub=config
perl5_process_sub=process
perl5_do_include_build_directories=yes

[instance_raw]
module=raw
senders=instance_exploder,instance_perl5
raw_print_data=yes
